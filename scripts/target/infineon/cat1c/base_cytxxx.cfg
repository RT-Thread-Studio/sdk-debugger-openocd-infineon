#
# Copyright (C) <2019-2021>
#   <Cypress Semiconductor Corporation (an Infineon company)>
#
# Common configuration for TRAVEOâ„¢II family of microcontrollers.
#
###############################################################################
# Include common misc scripts
###############################################################################

source [find target/swj-dp.tcl]
source [find target/infineon/common/common_arm.cfg]
source [find target/infineon/common/common_ifx.cfg]
namespace import arm::*
namespace import ifx::*

set CATEGORY cat1c
set SERIES cytxxx
set_or_global CHIPNAME traveo2
set_or_global FLASH_DRIVER_NAME traveo22
set ${CHIPNAME}::TARGET_VARIANT $TARGET_VARIANT

###############################################################################
# Target/setup identification
###############################################################################

# Include the chain of the configuration files defining the setup.
# The low-level definitions (variables and procedures) may overwrite any of the
# higher-level definitions when needed. It is performed using the target
# identification global variables and in bottom to high order:
#   SERIES -> CATEGORY

# Include memory and register definitions
catch { source [find target/infineon/${CATEGORY}/memory_${CATEGORY}_${SERIES}.cfg] }
source [find target/infineon/${CATEGORY}/memory_${CATEGORY}.cfg]

# Include configuration variables
catch { source [find target/infineon/${CATEGORY}/config_${CATEGORY}_${SERIES}.cfg] }
source [find target/infineon/${CATEGORY}/config_${CATEGORY}.cfg]

# Include functions/subroutines
catch {source [find target/infineon/${CATEGORY}/func_${CATEGORY}_${SERIES}.cfg] }
       source [find target/infineon/${CATEGORY}/func_${CATEGORY}.cfg]
       source [find target/infineon/cat1/func_cat1.cfg]

# Import definitions from included namespaces
namespace import ${CATEGORY}::${SERIES}*
namespace import ${CATEGORY}::*
namespace import cat1::*

global TARGET
set TARGET $CHIPNAME.cpu

# (large_sector_num << 16) | small_sector_num
set ${CHIPNAME}::MAIN_FLASH_SIZE_OVERRIDE [ expr {($MAIN_LARGE_SECTOR_NUM << 16) |  $MAIN_SMALL_SECTOR_NUM} ]
set ${CHIPNAME}::WORK_FLASH_SIZE_OVERRIDE [ expr {($WORK_LARGE_SECTOR_NUM << 16) |  $WORK_SMALL_SECTOR_NUM} ]
###############################################################################
# Adapter and SWJ settings
###############################################################################
set_adapter_options
define_kitprog3_acquire_options ${FLASH_DRIVER_NAME}
swj_newdap $CHIPNAME cpu -irlen $::SWJ_IRLEN -ircapture 0x1 -irmask 0xf


###############################################################################
# Configure DAP
###############################################################################
dap create $CHIPNAME.dap -chain-position $CHIPNAME.cpu -adiv5 -power-down-on-quit

if {[using_jtag]} {
	jtag newtap $CHIPNAME bs -irlen $::SWJ_IRLEN -expected-id 0
}
###############################################################################
# Configure CM0-AP
###############################################################################
target create ${TARGET}.cm0  cortex_m -dap $CHIPNAME.dap -ap-num 1 -coreid 0
${TARGET}.cm0 configure -work-area-phys $WORKAREAADDR -work-area-size $WORKAREASIZE -work-area-backup 0
${TARGET}.cm0 cortex_m reset_config sysresetreq

if { $TRAVEO_VARIANT_BH_16M != 0} {
	${TARGET}.cm0 configure -event examine-end " \
		display_info ${FLASH_DRIVER_NAME} \
		{${CHIPNAME}_main_cm0 ${CHIPNAME}_main1_cm0}  \
		{${CHIPNAME}_work_cm0 ${CHIPNAME}_work1_cm0}; \
		enable_cm7x"
	
	${TARGET}.cm0 configure -event examine-fail " \
		display_info ${FLASH_DRIVER_NAME} \
		{${CHIPNAME}_main_cm0 ${CHIPNAME}_main1_cm0} \
		{${CHIPNAME}_work_cm0 ${CHIPNAME}_work1_cm0}"
} else {
	${TARGET}.cm0 configure -event examine-end " \ 
		display_info ${FLASH_DRIVER_NAME} \
		${CHIPNAME}_main_cm0 ${CHIPNAME}_work_cm0; \
		enable_cm7x"
	${TARGET}.cm0 configure -event examine-fail " \ 
		display_info ${FLASH_DRIVER_NAME} \
		${CHIPNAME}_main_cm0 ${CHIPNAME}_work_cm0"
}
${TARGET}.cm0 configure -event reset-deassert-post " \
	mxs40_reset_deassert_post ${FLASH_DRIVER_NAME} ${TARGET}.cm0; \
	enable_cm7x"

flash bank ${CHIPNAME}_main_cm0     ${FLASH_DRIVER_NAME} $MAIN_FLASH_ADDR 0 0 0 ${TARGET}.cm0
flash bank ${CHIPNAME}_work_cm0     ${FLASH_DRIVER_NAME} $WORK_FLASH_ADDR 0 0 0 ${TARGET}.cm0
if { $TRAVEO_VARIANT_BH_16M != 0} {
	flash bank ${CHIPNAME}_main1_cm0     ${FLASH_DRIVER_NAME} $MAIN_1_FLASH_ADDR 0 0 0 ${TARGET}.cm0
	flash bank ${CHIPNAME}_work1_cm0     ${FLASH_DRIVER_NAME} $WORK_1_FLASH_ADDR 0 0 0 ${TARGET}.cm0
}

flash bank ${CHIPNAME}_super_cm0     ${FLASH_DRIVER_NAME} $SUPER_FLASH_ADDR 0 0 0 ${TARGET}.cm0

if { $TRAVEO_VARIANT_BH_16M != 0} {
	flash bank ${CHIPNAME}_ext0_cm0     ${FLASH_DRIVER_NAME} $EXT_0_FLASH_ADDR 0x00010000 0 0 ${TARGET}.cm0
	flash bank ${CHIPNAME}_ext1_cm0     ${FLASH_DRIVER_NAME} $EXT_1_FLASH_ADDR 0x00010000 0 0 ${TARGET}.cm0
}

flash bank ${CHIPNAME}_efuse_cm0     ${FLASH_DRIVER_NAME}_efuse $EFUSE_ADDR 1024 1 1 ${TARGET}.cm0 external


###############################################################################
# Configure CM70-AP
###############################################################################
if { $ENABLE_CM70 } {
	target create ${TARGET}.cm70 cortex_m -dap $CHIPNAME.dap -ap-num 2 -coreid 1
	$CHIPNAME.dap apsel 2
	$CHIPNAME.dap apcsw [expr {(1 << 24) | (1 << 25) | (1 << 27) | (1 << 29) | (1 << 31)}]
	${TARGET}.cm70 configure -work-area-phys $WORKAREAADDR -work-area-size $WORKAREASIZE -work-area-backup 0

	${TARGET}.cm70 configure -event reset-assert {}
	${TARGET}.cm70 configure -event reset-deassert-post " \
		mxs40_reset_deassert_post ${FLASH_DRIVER_NAME} ${TARGET}.cm70"

	flash bank ${CHIPNAME}_main_cm70     virtual $MAIN_FLASH_ADDR 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_main_cm0
	flash bank ${CHIPNAME}_work_cm70     virtual $WORK_FLASH_ADDR 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_work_cm0
	if { $TRAVEO_VARIANT_BH_16M != 0} {
		flash bank ${CHIPNAME}_main1_cm70     virtual $MAIN_1_FLASH_ADDR 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_main1_cm0
		flash bank ${CHIPNAME}_work1_cm70     virtual $WORK_1_FLASH_ADDR 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_work1_cm0
	}
	flash bank ${CHIPNAME}_super_cm70     virtual $SUPER_FLASH_ADDR 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_super_cm0

	if { $TRAVEO_VARIANT_BH_16M != 0} {
		flash bank ${CHIPNAME}_ext0_cm70     virtual $EXT_0_FLASH_ADDR 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_ext0_cm0
		flash bank ${CHIPNAME}_ext1_cm70     virtual $EXT_1_FLASH_ADDR 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_ext1_cm0
	}

	flash bank ${CHIPNAME}_efuse_cm70     virtual $EFUSE_ADDR 1024 1 1 ${TARGET}.cm70 ${CHIPNAME}_efuse_cm0 external
}

###############################################################################
# Configure CM71-AP
###############################################################################

if { $ENABLE_CM71 } {
	target create ${TARGET}.cm71 cortex_m -dap $CHIPNAME.dap -ap-num 3 -coreid 2
	$CHIPNAME.dap apsel 3
	$CHIPNAME.dap apcsw [expr {(1 << 24) | (1 << 25) | (1 << 27) | (1 << 29) | (1 << 31)}]
	${TARGET}.cm71 configure -work-area-phys $WORKAREAADDR -work-area-size $WORKAREASIZE -work-area-backup 0

	${TARGET}.cm71 configure -event reset-assert {}
	${TARGET}.cm71 configure -event reset-deassert-post " \
		mxs40_reset_deassert_post ${FLASH_DRIVER_NAME} ${TARGET}.cm71"

	flash bank ${CHIPNAME}_main_cm71     virtual $MAIN_FLASH_ADDR 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_main_cm0
	flash bank ${CHIPNAME}_work_cm71     virtual $WORK_FLASH_ADDR 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_work_cm0
	if { $TRAVEO_VARIANT_BH_16M != 0} {
		flash bank ${CHIPNAME}_main1_cm71     virtual $MAIN_1_FLASH_ADDR 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_main1_cm0
		flash bank ${CHIPNAME}_work1_cm71     virtual $WORK_1_FLASH_ADDR 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_work1_cm0
	}
	flash bank ${CHIPNAME}_super_cm71     virtual $SUPER_FLASH_ADDR 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_super_cm0

	if { $TRAVEO_VARIANT_BH_16M != 0} {
		flash bank ${CHIPNAME}_ext0_cm71     virtual $EXT_0_FLASH_ADDR 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_ext0_cm0
		flash bank ${CHIPNAME}_ext1_cm71     virtual $EXT_1_FLASH_ADDR 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_ext1_cm0
	}

	flash bank ${CHIPNAME}_efuse_cm71		virtual $EFUSE_ADDR 1024 1 1 ${TARGET}.cm71 ${CHIPNAME}_efuse_cm0 external
}

###############################################################################
# Configure CM72-AP
###############################################################################

if { $ENABLE_CM72 } {
	target create ${TARGET}.cm72 cortex_m -dap $CHIPNAME.dap -ap-num 4 -coreid 3
	$CHIPNAME.dap apsel 4
	$CHIPNAME.dap apcsw [expr {(1 << 24) | (1 << 25) | (1 << 27) | (1 << 29) | (1 << 31)}]
	${TARGET}.cm72 configure -work-area-phys $WORKAREAADDR -work-area-size $WORKAREASIZE -work-area-backup 0

	${TARGET}.cm72 configure -event reset-assert {}
	${TARGET}.cm72 configure -event reset-deassert-post " \
		mxs40_reset_deassert_post ${FLASH_DRIVER_NAME} ${TARGET}.cm72"

	flash bank ${CHIPNAME}_main_cm72      virtual $MAIN_FLASH_ADDR 0 0 0 ${TARGET}.cm72 ${CHIPNAME}_main_cm0
	flash bank ${CHIPNAME}_work_cm72      virtual $WORK_FLASH_ADDR 0 0 0 ${TARGET}.cm72 ${CHIPNAME}_work_cm0
	flash bank ${CHIPNAME}_main1_cm72     virtual $MAIN_1_FLASH_ADDR 0 0 0 ${TARGET}.cm72 ${CHIPNAME}_main1_cm0
	flash bank ${CHIPNAME}_work1_cm72     virtual $WORK_1_FLASH_ADDR 0 0 0 ${TARGET}.cm72 ${CHIPNAME}_work1_cm0
	flash bank ${CHIPNAME}_super_cm72     virtual $SUPER_FLASH_ADDR 0 0 0 ${TARGET}.cm72 ${CHIPNAME}_super_cm0
	flash bank ${CHIPNAME}_ext0_cm72      virtual $EXT_0_FLASH_ADDR 0 0 0 ${TARGET}.cm72 ${CHIPNAME}_ext0_cm0
	flash bank ${CHIPNAME}_ext1_cm72      virtual $EXT_1_FLASH_ADDR 0 0 0 ${TARGET}.cm72 ${CHIPNAME}_ext1_cm0
	flash bank ${CHIPNAME}_efuse_cm72     virtual $EFUSE_ADDR 1024 1 1 ${TARGET}.cm72 ${CHIPNAME}_efuse_cm0 external
}

###############################################################################
# Configure CM72-AP
###############################################################################

if { $ENABLE_CM73 } {
	target create ${TARGET}.cm73 cortex_m -dap $CHIPNAME.dap -ap-num 5 -coreid 4
	$CHIPNAME.dap apsel 5
	$CHIPNAME.dap apcsw [expr {(1 << 24) | (1 << 25) | (1 << 27) | (1 << 29) | (1 << 31)}]
	${TARGET}.cm73 configure -work-area-phys $WORKAREAADDR -work-area-size $WORKAREASIZE -work-area-backup 0

	${TARGET}.cm73 configure -event reset-assert {}
	${TARGET}.cm73 configure -event reset-deassert-post " \
		mxs40_reset_deassert_post ${FLASH_DRIVER_NAME} ${TARGET}.cm73"

	flash bank ${CHIPNAME}_main_cm73      virtual $MAIN_FLASH_ADDR 0 0 0 ${TARGET}.cm73 ${CHIPNAME}_main_cm0
	flash bank ${CHIPNAME}_work_cm73      virtual $WORK_FLASH_ADDR 0 0 0 ${TARGET}.cm73 ${CHIPNAME}_work_cm0
	flash bank ${CHIPNAME}_main1_cm73     virtual $MAIN_1_FLASH_ADDR 0 0 0 ${TARGET}.cm73 ${CHIPNAME}_main1_cm0
	flash bank ${CHIPNAME}_work1_cm73     virtual $WORK_1_FLASH_ADDR 0 0 0 ${TARGET}.cm73 ${CHIPNAME}_work1_cm0
	flash bank ${CHIPNAME}_super_cm73     virtual $SUPER_FLASH_ADDR 0 0 0 ${TARGET}.cm73 ${CHIPNAME}_super_cm0
	flash bank ${CHIPNAME}_ext0_cm73      virtual $EXT_0_FLASH_ADDR 0 0 0 ${TARGET}.cm73 ${CHIPNAME}_ext0_cm0
	flash bank ${CHIPNAME}_ext1_cm73      virtual $EXT_1_FLASH_ADDR 0 0 0 ${TARGET}.cm73 ${CHIPNAME}_ext1_cm0
	flash bank ${CHIPNAME}_efuse_cm73     virtual $EFUSE_ADDR 1024 1 1 ${TARGET}.cm73 ${CHIPNAME}_efuse_cm0 external
}

foreach {enable_var} [info vars] {
	catch {
		if {([regexp "^ENABLE_.*FLASH" $enable_var] || [regexp "^ENABLE_DUALQUADSPI" $enable_var]) && [set $enable_var]} {
			set channel "0"
			if [regexp "_0" $enable_var] { set channel "0" }
			if [regexp "_1" $enable_var] { set channel "1" }

			set loader_var [regsub "_" [regsub "ENABLE_" $enable_var ""] "_LOADER_"]
			if {[regexp "_LOADER" $loader_var] == 0} {
				set loader_var ${loader_var}_LOADER
			}

			set loader_name [set $loader_var]
			set new_enable_var "SMIF${channel}_LOADER"

			puts stderr "** The '$enable_var/$loader_var' variables are DEPRECATED, please use 'set $new_enable_var $loader_name'"
			eval set $new_enable_var $loader_name
			set  $enable_var 0
			set _$enable_var 0
			unset $loader_var
		}
	}
}

if { [info exists SMIF0_LOADER] } {
	flash bank ${CHIPNAME}_smif0_cm0    cmsis_flash   0x60000000 0 4 4 ${TARGET}.cm0 ../flm/cypress/traveo2/${SMIF0_LOADER} 0x400
	flash bank ${CHIPNAME}_smif0_cm70   virtual       0x60000000 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_smif0_cm0
	if {$TRAVEO_VARIANT_C2D_4M == 0} {
		flash bank ${CHIPNAME}_smif0_cm71     virtual     0x60000000 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_smif0_cm0
	}
}

if { [info exists SMIF1_LOADER] } {
	flash bank ${CHIPNAME}_smif1_cm0     cmsis_flash   0x80000000 0 4 4 ${TARGET}.cm0 ../flm/cypress/traveo2/${SMIF1_LOADER} 0x400
	flash bank ${CHIPNAME}_smif1_cm70    virtual       0x80000000 0 0 0 ${TARGET}.cm70 ${CHIPNAME}_smif1_cm0
	if {$TRAVEO_VARIANT_C2D_4M == 0} {
		flash bank ${CHIPNAME}_smif1_cm71     virtual     0x80000000 0 0 0 ${TARGET}.cm71 ${CHIPNAME}_smif1_cm0
	}
}
###############################################################################
# Misc. configuration
###############################################################################
targets ${TARGET}.cm0