#
# Copyright (C) <2024>
#	<Cypress Semiconductor Corporation (an Infineon company)>
#
# Subroutines for CAT1A-CY8CXXX families of microcontrollers.

namespace eval cat1a::cy8cxxx {

	namespace import ::arm::*
	namespace import ::ifx::*
	namespace import ::cat1::*

	###############################################################################
	# Define series specific flashbanks
	###############################################################################
	proc define_flash_banks {} {
		if { $::ENABLE_CM0 } {
			flash bank ${::CHIPNAME}_main_cm0       ${::FLASH_DRIVER_NAME} $::MAIN_FLASH_ADDR 0 0 0 ${::TARGET}.cm0
			if { $::HAS_WORKFLASH } {
				flash bank ${::CHIPNAME}_work_cm0      ${::FLASH_DRIVER_NAME} $::WORK_FLASH_ADDR 0 0 0 ${::TARGET}.cm0
			}
			flash bank ${::CHIPNAME}_super_cm0      ${::FLASH_DRIVER_NAME} $::SUPER_FLASH_ADDR 0 0 0 ${::TARGET}.cm0
			flash bank ${::CHIPNAME}_efuse_cm0      ${::FLASH_DRIVER_NAME}_efuse $::EFUSE_ADDR 1024 1 1 ${::TARGET}.cm0 external

			add_verify_range ${::TARGET}.cm0 $::DEF_FLASH_ADDR      $::DEF_FLASH_SIZE
			add_verify_range ${::TARGET}.cm0 $::MAIN_FLASH_ADDR     $::DEF_MAIN_FLASH_SIZE
			add_verify_range ${::TARGET}.cm0 $::WORK_FLASH_ADDR     $::WORK_FLASH_SIZE
			add_verify_range ${::TARGET}.cm0 $::SUPER_FLASH_ADDR    $::SUPER_FLASH_SIZE
			add_verify_range ${::TARGET}.cm0 $::EFUSE_ADDR          $::EFUSE_FLASH_SIZE
		}

		if { $::ENABLE_CM4 } {
			if { $::ENABLE_CM0 } {
				flash bank ${::CHIPNAME}_main_cm4       virtual $::MAIN_FLASH_ADDR 0 0 0 ${::TARGET}.cm4 ${::CHIPNAME}_main_cm0
				if { $::HAS_WORKFLASH } {
					flash bank ${::CHIPNAME}_work_cm4       virtual $::WORK_FLASH_ADDR 0 0 0 ${::TARGET}.cm4 ${::CHIPNAME}_work_cm0
				}
				flash bank ${::CHIPNAME}_super_cm4      virtual $::SUPER_FLASH_ADDR 0 0 0 ${::TARGET}.cm4 ${::CHIPNAME}_super_cm0
				flash bank ${::CHIPNAME}_efuse_cm4      virtual $::EFUSE_ADDR 1024 1 1 ${::TARGET}.cm4 ${::CHIPNAME}_efuse_cm0 external
			} else {
				flash bank ${::CHIPNAME}_main_cm4      ${::FLASH_DRIVER_NAME} $::MAIN_FLASH_ADDR 0 0 0 ${::TARGET}.cm4
				if { $::HAS_WORKFLASH } {
					flash bank ${::CHIPNAME}_work_cm4      ${::FLASH_DRIVER_NAME} $::WORK_FLASH_ADDR 0 0 0 ${::TARGET}.cm4
				}
				flash bank ${::CHIPNAME}_super_cm4      ${::FLASH_DRIVER_NAME} $::SUPER_FLASH_ADDR 0 0 0 ${::TARGET}.cm4
				flash bank ${::CHIPNAME}_efuse_cm4      ${::FLASH_DRIVER_NAME}_efuse $::EFUSE_ADDR 1024 1 1 ${::TARGET}.cm4 external
			}
			
			add_verify_range ${::TARGET}.cm4 $::DEF_FLASH_ADDR      $::DEF_FLASH_SIZE
			add_verify_range ${::TARGET}.cm4 $::MAIN_FLASH_ADDR     $::DEF_MAIN_FLASH_SIZE
			add_verify_range ${::TARGET}.cm4 $::WORK_FLASH_ADDR     $::WORK_FLASH_SIZE
			add_verify_range ${::TARGET}.cm4 $::SUPER_FLASH_ADDR    $::SUPER_FLASH_SIZE
			add_verify_range ${::TARGET}.cm4 $::EFUSE_ADDR          $::EFUSE_FLASH_SIZE
		}
		
		# example of qspi_config.cfg
		#set SMIF_BANKS {
		#  1 {addr 0x18000000 size 0x10000 psize 0x100 esize 0x1000}
		#  2 {addr 0x18010000 size 0x10000 psize 0x100 esize 0x1000}
		#  3 {addr 0x18020000 size 0x10000 psize 0x100 esize 0x1000}
		#  4 {addr 0x18030000 size 0x10000 psize 0x100 esize 0x1000}
		#}
		catch {source [find qspi_config.cfg]}
		
		if {![info exists SMIF_BANKS]} {
			global SMIF_BANKS
		}
			
		if { [info exists SMIF_BANKS] } {
			set num_banks [array size SMIF_BANKS]
			set bank_param ""
			if { $num_banks > 1 } {
				set bank_param "prefer_sector_erase"
			}

			foreach {key value} [array get SMIF_BANKS] {
				if { $::ENABLE_CM0 } {
					flash bank ${::CHIPNAME}_smif${key}_cm0 cmsis_flash $value(addr) $value(size) 4 4 ${::TARGET}.cm0 ${::QSPI_FLASHLOADER} 0x800 {*}$bank_param
					add_verify_range ${::TARGET}.cm0 $value(addr) $value(size)
					if { $::ENABLE_CM4 } {
						flash bank ${::CHIPNAME}_smif${key}_cm4 virtual $value(addr) $value(size) 0 0 ${::TARGET}.cm4 ${::CHIPNAME}_smif${key}_cm0
						add_verify_range ${::TARGET}.cm4 $value(addr) $value(size)
					}
				} else {
					flash bank ${::CHIPNAME}_smif${key}_cm4 cmsis_flash $value(addr) $value(size) 4 4 ${::TARGET}.cm4 ${::QSPI_FLASHLOADER} 0x800 {*}$bank_param
					add_verify_range ${::TARGET}.cm4 $value(addr) $value(size)
				}
			}
		}
	}
}
