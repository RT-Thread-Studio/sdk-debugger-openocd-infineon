#
# Copyright (C) <2019-2024>
#   <Cypress Semiconductor Corporation (an Infineon company)>
#
# Common configuration for TRAVEOâ„¢II family of microcontrollers.
#

###############################################################################
# Include common misc scripts
###############################################################################

source [find mem_helper.tcl]
source [find target/swj-dp.tcl]
source [find target/infineon/common/common_arm.cfg]
source [find target/infineon/common/common_ifx.cfg]
namespace import arm::*
namespace import ifx::*

set CATEGORY cat1a
set SERIES cyt2xx
set_or_global CHIPNAME traveo2
set_or_global FLASH_DRIVER_NAME traveo21
set ${CHIPNAME}::TARGET_VARIANT $TARGET_VARIANT

###############################################################################
# Target/setup identification
###############################################################################

# Include the chain of the configuration files defining the setup.
# The low-level definitions (variables and procedures) may overwrite any of the
# higher-level definitions when needed. It is performed using the target
# identification global variables and in bottom to high order:
#   SERIES -> CATEGORY

# Include memory and register definitions
catch { source [find target/infineon/${CATEGORY}/memory_${CATEGORY}_${SERIES}.cfg] }
source [find target/infineon/${CATEGORY}/memory_${CATEGORY}.cfg]

# Include configuration variables
catch { source [find target/infineon/${CATEGORY}/config_${CATEGORY}_${SERIES}.cfg] }
source [find target/infineon/${CATEGORY}/config_${CATEGORY}.cfg]

# Include functions/subroutines
catch {source [find target/infineon/${CATEGORY}/func_${CATEGORY}_${SERIES}.cfg] }
source [find target/infineon/${CATEGORY}/func_${CATEGORY}.cfg]
source [find target/infineon/cat1/func_cat1.cfg]

# Import definitions from included namespaces
namespace import ${CATEGORY}::${SERIES}*
namespace import ${CATEGORY}::*
namespace import cat1::*


global TARGET
set TARGET $CHIPNAME.cpu


# (large_sector_num << 16) | small_sector_num
set ${CHIPNAME}::MAIN_FLASH_SIZE_OVERRIDE [ expr {($MAIN_LARGE_SECTOR_NUM << 16) |  $MAIN_SMALL_SECTOR_NUM} ]
set ${CHIPNAME}::WORK_FLASH_SIZE_OVERRIDE [ expr {($WORK_LARGE_SECTOR_NUM << 16) |  $WORK_SMALL_SECTOR_NUM} ]

###############################################################################
# Adapter and SWJ settings
###############################################################################

set_adapter_options
define_kitprog3_acquire_options ${FLASH_DRIVER_NAME}
swj_newdap $CHIPNAME cpu -irlen $::SWJ_IRLEN -ircapture 0x1 -irmask 0xf

###############################################################################
# Configure DAP
###############################################################################
dap create $CHIPNAME.dap -chain-position $CHIPNAME.cpu -adiv5 -power-down-on-quit

if {[using_jtag]} {
	jtag newtap $CHIPNAME bs -irlen $::SWJ_IRLEN -expected-id 0
}

###############################################################################
# Configure CM0-AP
###############################################################################
target create ${TARGET}.cm0 cortex_m -dap $CHIPNAME.dap -ap-num 1 -coreid 0
${TARGET}.cm0 configure -work-area-phys $WORKAREAADDR -work-area-size $WORKAREASIZE -work-area-backup 0

flash bank ${CHIPNAME}_main_cm0     ${FLASH_DRIVER_NAME} $MAIN_FLASH_ADDR 0 0 0 ${TARGET}.cm0
flash bank ${CHIPNAME}_work_cm0     ${FLASH_DRIVER_NAME} $WORK_FLASH_ADDR 0 0 0 ${TARGET}.cm0
flash bank ${CHIPNAME}_super_cm0    ${FLASH_DRIVER_NAME} $SUPER_FLASH_ADDR 0 0 0 ${TARGET}.cm0
flash bank ${CHIPNAME}_efuse_cm0    ${FLASH_DRIVER_NAME}_efuse $EFUSE_ADDR 1024 1 1 ${TARGET}.cm0 external

${TARGET}.cm0 cortex_m reset_config sysresetreq
# Disable FLASHCTL ECC to avoid WorkFlash verification failures after Reset
${TARGET}.cm0 configure -event reset-deassert-post "mxs40_reset_deassert_post ${FLASH_DRIVER_NAME} ${TARGET}.cm0; catch {mww 0x40240000 0x00000000}"
${TARGET}.cm0 configure -event examine-end "display_info \
	${FLASH_DRIVER_NAME} ${CHIPNAME}_main_cm0 \
	${CHIPNAME}_work_cm0"
${TARGET}.cm0 configure -event examine-fail "display_info \
	${FLASH_DRIVER_NAME} ${CHIPNAME}_main_cm0 \
	${CHIPNAME}_work_cm0"


###############################################################################
# Configure CM4-AP
###############################################################################
if { $ENABLE_CM4 } {
	target create ${TARGET}.cm4 cortex_m -dap $CHIPNAME.dap -ap-num 2 -coreid 1
	${TARGET}.cm4 configure -work-area-phys $WORKAREAADDR -work-area-size $WORKAREASIZE -work-area-backup 0

	flash bank ${CHIPNAME}_main_cm4     virtual $MAIN_FLASH_ADDR 0 0 0 ${TARGET}.cm4 ${CHIPNAME}_main_cm0
	flash bank ${CHIPNAME}_work_cm4     virtual $WORK_FLASH_ADDR 0 0 0 ${TARGET}.cm4 ${CHIPNAME}_work_cm0
	flash bank ${CHIPNAME}_super_cm4    virtual $SUPER_FLASH_ADDR 0 0 0 ${TARGET}.cm4 ${CHIPNAME}_super_cm0
	flash bank ${CHIPNAME}_efuse_cm4    virtual $EFUSE_ADDR 1024 1 1 ${TARGET}.cm4 ${CHIPNAME}_efuse_cm0 external

	${TARGET}.cm4 configure -event reset-deassert-post "mxs40_reset_deassert_post ${FLASH_DRIVER_NAME} ${TARGET}.cm4"
	${TARGET}.cm4 configure -event reset-assert {}
}

###############################################################################
# Misc. configuration
###############################################################################
targets ${TARGET}.cm0